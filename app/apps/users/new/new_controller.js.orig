/**
# Users.New SubApp

The users.new subapp contains both the controller and view constructors necessary to display a user's detail page in the frontend.

@module users
@submodule users.new
@main
**/

/**
# Controller

The users.new.controller creates a user's layout view and displays it in moonrakr.mainRegion

@class controller
@static
@namespace users.new
@requires moonrakr, users.new.views
**/

define(function(require){

  var Moonrakr = require('app');
  require('apps/users/new/new_views');

  return Moonrakr.module('UsersApp.New', function(New){

    New.Controller = {
      newUser: function(){

        var newUser = new Moonrakr.Entities.User();

        var layoutView = new New.User({
          model: newUser
        });

        var imageUploadView = new New.ImageUploader();

        layoutView.on('render', function(){
          layoutView.imageUploadRegion.show( imageUploadView );
        });

        // SAVE HANDLER //
        layoutView.on('form:submit', function(){

<<<<<<< HEAD
          newUser.save();

          // GET HIGHEST ID OF ALL POSTS -- not needed with live server
          // var fetchingUsers = Moonrakr.request('user:entities');
          // $.when(fetchingUsers).done(function(users){

          //   // var highestId = users.max(function(c){ return c.id });
          //   // highestId = highestId.get('id');
          //   // id = highestId + 1;
          //   if(newUser.save({'id': id})){
          //     Moonrakr.trigger('user:show', newUser.get('id'));
          //   }
          //   else {
          //     layoutView.triggerMethod('form:data:invalid', newUser.validationError);
          //   }
          // });
=======
          var data = { 'id': Moonrakr.Entities.HelperFunctions.randomString(32) }; // not needed with live server

          newUser.save(data, {
            success: function(){
              console.log('new user save succesful');
              Moonrakr.trigger('user:show', newUser.get('id'));
            },
            error: function(){
              console.log('new user save failed');
              layoutView.triggerMethod('form:data:invalid', newUser.validationError);
              // TODO handle save error
            }
          });
>>>>>>> develop

        });

        Moonrakr.mainRegion.show( layoutView );
      }
    }

  });

});